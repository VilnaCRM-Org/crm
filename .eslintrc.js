module.exports = {
  root: true,
  env: {
    node: true,
    es6: true,
    jest: true,
  },
  parser: '@typescript-eslint/parser',
  parserOptions: { ecmaVersion: 2022, sourceType: 'module', project: './tsconfig.json' },
  plugins: ['@typescript-eslint', 'eslint-comments'],
  ignorePatterns: [
    'node_modules/*',
    'docker-compose.yml',
    'pnpm-lock.yaml',
    'build/*',
    'coverage/*',
    'storybook-static/*',
  ],
  extends: [
    'eslint:recommended',
    'airbnb',
    'airbnb/hooks',
    'plugin:@typescript-eslint/recommended',
    'plugin:react/recommended',
    'prettier',
  ],
  overrides: [
    {
      files: ['scripts/cloudfront_routing.js'],
      env: {
        node: true,
        es6: false,
      },
      parserOptions: {
        ecmaVersion: 5,
        sourceType: 'script',
      },
      rules: {
        'no-var': 'off',
        'prefer-const': 'off',
        'prefer-destructuring': 'off',
        'no-console': 'warn',
        strict: ['error', 'global'],
      },
    },
    {
      files: ['**/*.js', '**/*.jsx'],
      settings: {
        'import/resolver': {
          node: {
            extensions: ['.js', '.jsx', '.mjs'],
          },
        },
        react: { version: 'detect' },
      },
      env: {
        browser: true,
        node: true,
        es6: true,
      },
    },
    {
      files: ['**/*.ts', '**/*.tsx', '**/*.spec.ts', '**/*.spec.tsx'],
      parser: '@typescript-eslint/parser',
      plugins: ['@typescript-eslint', 'eslint-comments'],
      settings: {
        react: { version: 'detect' },
        'import/resolver': {
          node: {
            extensions: ['.ts', '.tsx', '.js', '.jsx', '.mjs'],
          },
          typescript: {
            project: './tsconfig.json',
          },
        },
      },
      env: {
        browser: true,
        node: true,
        es6: true,
      },
      extends: [
        'eslint:recommended',
        'plugin:import/errors',
        'plugin:import/warnings',
        'plugin:import/typescript',
        'plugin:@typescript-eslint/recommended',
        'plugin:react/recommended',
        'plugin:react-hooks/recommended',
        'plugin:jsx-a11y/recommended',
        'plugin:testing-library/react',
        'plugin:jest-dom/recommended',
        'plugin:eslint-comments/recommended',
      ],
      rules: {
        'eslint-comments/no-use': [
          'error',
          { allow: ['eslint-disable-next-line', 'eslint-disable', 'eslint-enable'] },
        ],
        'react/jsx-no-bind': 'warn',
        'no-await-in-loop': 'warn',
        'no-restricted-syntax': 'warn',
        'no-alert': 'error',
        'no-console': 'error',
        'import/prefer-default-export': 'warn',
        'max-len': ['error', { code: 150 }],
        'no-restricted-imports': [
          'error',
          {
            patterns: ['@/features/*/*'],
          },
        ],
        'no-multiple-empty-lines': [2, { max: 2, maxEOF: 0 }],
        'linebreak-style': ['error', 'unix'],
        'react/prop-types': 'off',
        'import/no-extraneous-dependencies': [
          'error',
          {
            devDependencies: [
              '**/*.test.*',
              '**/*.spec.*',
              '**/test/**/*',
              '**/tests/**/*',
              '**/*.stories.*',
              '**/jest.setup.*',
              '**/jest.config.*',
              '**/playwright.config.*',
              '**/stryker.config.*',
            ]
          }
        ],
        'import/order': [
          'error',
          {
            groups: ['builtin', 'external', 'internal', 'parent', 'sibling', 'index', 'object'],
            'newlines-between': 'always',
            alphabetize: { order: 'asc', caseInsensitive: true },
          },
        ],
        'import/default': 'off',
        'import/no-named-as-default-member': 'off',
        'import/no-named-as-default': 'off',
        'import/extensions': 'off',
        'react/react-in-jsx-scope': 'off',
        'react/jsx-filename-extension': ['error', { extensions: ['.jsx', '.tsx'] }],
        'jsx-a11y/anchor-is-valid': 'off',
        '@typescript-eslint/no-unused-vars': ['error'],
        '@typescript-eslint/explicit-function-return-type': ['off'],
        '@typescript-eslint/explicit-module-boundary-types': ['off'],
        '@typescript-eslint/no-empty-function': ['off'],
        '@typescript-eslint/no-explicit-any': ['off'],
        '@typescript-eslint/no-var-requires': ['off'],
      },
    },
    {
      files: [
        '**/*.ts',
        '**/*.js',
        '**/*.spec.js',
        '**/*.spec.jsx',
        '**/*.spec.ts',
        '**/*.spec.tsx',
        'src/test/load/**/*.js',
      ],
      parser: '@typescript-eslint/parser',
      extends: ['eslint:recommended', 'plugin:react/recommended', 'plugin:react-hooks/recommended'],
      rules: {
        'no-console': 'error',
        'import/extensions': ['off', 'never', { js: 'never', jsx: 'never' }],
        'prefer-template': 'off',
        'no-restricted-syntax': 'off',
        'import/no-unresolved': 'off',
        'class-methods-use-this': 'off',
        'no-restricted-globals': 'off',
        'no-undef': 'off',
        'no-use-before-define': 'off',
        'import/no-extraneous-dependencies': 'off',
        'import/no-dynamic-require': 'off',
        'global-require': 'off',
        'no-await-in-loop': 'off',
        '@typescript-eslint/no-var-requires': 'off',
      },
    },
  ],
};
